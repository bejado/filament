name: Release

# This Workflow can be triggered two ways:
# 1. A GitHub release is created (using the GitHub web UI). This triggers all of the platforms to build and upload assets.
# 2. A repository_dispatch API event is sent. This triggers a build for only the platform specified in the dispatch event.

env:
  RELEASE_TAG: ${{ github.event.client_payload.release_tag }}

on:
  repository_dispatch:
  release:
    types: [created]

jobs:
  build-android:
    name: build-android
    runs-on: macos-latest
    if: github.event_name == 'release' || github.event.client_payload.platform == 'android'

    steps:
      - name: Decide Git ref
        id: git_ref
        run: |
          REF=${RELEASE_TAG:-${GITHUB_REF}}
          TAG=${REF##*/}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=tag::${TAG}
      - uses: actions/checkout@v2.0.0
        with:
          ref: ${{ steps.git_ref.outputs.ref }}
      - name: Sign sample-gltf-viewer
        run: |
          mkdir -p out
          cp sample-gltf-viewer-release.apk out/
          echo ${APK_KEYSTORE_BASE64} > filament.jks.base64
          base64 --decode filament.jks.base64 > filament.jks
          md5 filament.jks
          BUILD_TOOLS_VERSION=30.0.3
          APKSIGNER=${ANDROID_HOME}/build-tools/${BUILD_TOOLS_VERSION}/apksigner
          IN_FILE="out/sample-gltf-viewer-release.apk"
          OUT_FILE="out/filament-gltf-viewer-${TAG}-android.apk"
          ${APKSIGNER} sign --ks filament.jks --key-pass=pass:abc123 --ks-pass=pass:abc123 --in ${IN_FILE} --out ${OUT_FILE}
          rm out/sample-gltf-viewer-release.apk
      - name: Upload release assets
        run: |
          pip3 install setuptools
          pip3 install PyGithub
          mv out/filament-android-release.aar out/filament-${TAG}-android.aar
          mv out/filamat-android-release.aar out/filamat-${TAG}-android.aar
          mv out/filamat-android-lite-release.aar out/filamat-${TAG}-lite-android.aar
          mv out/gltfio-android-release.aar out/gltfio-${TAG}-android.aar
          mv out/gltfio-android-lite-release.aar out/gltfio-${TAG}-lite-android.aar
          mv out/filament-utils-android-release.aar out/filament-utils-${TAG}-android.aar
          mv out/filament-utils-android-lite-release.aar out/filament-utils-${TAG}-lite-android.aar
          python3 build/common/upload-assets.py ${TAG} out/*.aar out/*.apk
        env:
          TAG: ${{ steps.git_ref.outputs.tag }}
          GITHUB_API_KEY: ${{ secrets.GITHUB_API_KEY }}
          APK_KEYSTORE_BASE64: ${{ secrets.APK_KEYSTORE_BASE64 }}
          APK_KEYSTORE_PASS: ${{ secrets.APK_KEYSTORE_PASS }}
